package com.bluefireplatform.entity;

import java.util.ArrayList;
import java.util.List;

public class IndoorMiddleTabExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    public IndoorMiddleTabExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIndoorMiddleIdIsNull() {
            addCriterion("indoor_middle_id is null");
            return (Criteria) this;
        }

        public Criteria andIndoorMiddleIdIsNotNull() {
            addCriterion("indoor_middle_id is not null");
            return (Criteria) this;
        }

        public Criteria andIndoorMiddleIdEqualTo(Integer value) {
            addCriterion("indoor_middle_id =", value, "indoorMiddleId");
            return (Criteria) this;
        }

        public Criteria andIndoorMiddleIdNotEqualTo(Integer value) {
            addCriterion("indoor_middle_id <>", value, "indoorMiddleId");
            return (Criteria) this;
        }

        public Criteria andIndoorMiddleIdGreaterThan(Integer value) {
            addCriterion("indoor_middle_id >", value, "indoorMiddleId");
            return (Criteria) this;
        }

        public Criteria andIndoorMiddleIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("indoor_middle_id >=", value, "indoorMiddleId");
            return (Criteria) this;
        }

        public Criteria andIndoorMiddleIdLessThan(Integer value) {
            addCriterion("indoor_middle_id <", value, "indoorMiddleId");
            return (Criteria) this;
        }

        public Criteria andIndoorMiddleIdLessThanOrEqualTo(Integer value) {
            addCriterion("indoor_middle_id <=", value, "indoorMiddleId");
            return (Criteria) this;
        }

        public Criteria andIndoorMiddleIdIn(List<Integer> values) {
            addCriterion("indoor_middle_id in", values, "indoorMiddleId");
            return (Criteria) this;
        }

        public Criteria andIndoorMiddleIdNotIn(List<Integer> values) {
            addCriterion("indoor_middle_id not in", values, "indoorMiddleId");
            return (Criteria) this;
        }

        public Criteria andIndoorMiddleIdBetween(Integer value1, Integer value2) {
            addCriterion("indoor_middle_id between", value1, value2, "indoorMiddleId");
            return (Criteria) this;
        }

        public Criteria andIndoorMiddleIdNotBetween(Integer value1, Integer value2) {
            addCriterion("indoor_middle_id not between", value1, value2, "indoorMiddleId");
            return (Criteria) this;
        }

        public Criteria andOriginalIdIsNull() {
            addCriterion("original_id is null");
            return (Criteria) this;
        }

        public Criteria andOriginalIdIsNotNull() {
            addCriterion("original_id is not null");
            return (Criteria) this;
        }

        public Criteria andOriginalIdEqualTo(Integer value) {
            addCriterion("original_id =", value, "originalId");
            return (Criteria) this;
        }

        public Criteria andOriginalIdNotEqualTo(Integer value) {
            addCriterion("original_id <>", value, "originalId");
            return (Criteria) this;
        }

        public Criteria andOriginalIdGreaterThan(Integer value) {
            addCriterion("original_id >", value, "originalId");
            return (Criteria) this;
        }

        public Criteria andOriginalIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("original_id >=", value, "originalId");
            return (Criteria) this;
        }

        public Criteria andOriginalIdLessThan(Integer value) {
            addCriterion("original_id <", value, "originalId");
            return (Criteria) this;
        }

        public Criteria andOriginalIdLessThanOrEqualTo(Integer value) {
            addCriterion("original_id <=", value, "originalId");
            return (Criteria) this;
        }

        public Criteria andOriginalIdIn(List<Integer> values) {
            addCriterion("original_id in", values, "originalId");
            return (Criteria) this;
        }

        public Criteria andOriginalIdNotIn(List<Integer> values) {
            addCriterion("original_id not in", values, "originalId");
            return (Criteria) this;
        }

        public Criteria andOriginalIdBetween(Integer value1, Integer value2) {
            addCriterion("original_id between", value1, value2, "originalId");
            return (Criteria) this;
        }

        public Criteria andOriginalIdNotBetween(Integer value1, Integer value2) {
            addCriterion("original_id not between", value1, value2, "originalId");
            return (Criteria) this;
        }

        public Criteria andPresentIdIsNull() {
            addCriterion("present_id is null");
            return (Criteria) this;
        }

        public Criteria andPresentIdIsNotNull() {
            addCriterion("present_id is not null");
            return (Criteria) this;
        }

        public Criteria andPresentIdEqualTo(Integer value) {
            addCriterion("present_id =", value, "presentId");
            return (Criteria) this;
        }

        public Criteria andPresentIdNotEqualTo(Integer value) {
            addCriterion("present_id <>", value, "presentId");
            return (Criteria) this;
        }

        public Criteria andPresentIdGreaterThan(Integer value) {
            addCriterion("present_id >", value, "presentId");
            return (Criteria) this;
        }

        public Criteria andPresentIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("present_id >=", value, "presentId");
            return (Criteria) this;
        }

        public Criteria andPresentIdLessThan(Integer value) {
            addCriterion("present_id <", value, "presentId");
            return (Criteria) this;
        }

        public Criteria andPresentIdLessThanOrEqualTo(Integer value) {
            addCriterion("present_id <=", value, "presentId");
            return (Criteria) this;
        }

        public Criteria andPresentIdIn(List<Integer> values) {
            addCriterion("present_id in", values, "presentId");
            return (Criteria) this;
        }

        public Criteria andPresentIdNotIn(List<Integer> values) {
            addCriterion("present_id not in", values, "presentId");
            return (Criteria) this;
        }

        public Criteria andPresentIdBetween(Integer value1, Integer value2) {
            addCriterion("present_id between", value1, value2, "presentId");
            return (Criteria) this;
        }

        public Criteria andPresentIdNotBetween(Integer value1, Integer value2) {
            addCriterion("present_id not between", value1, value2, "presentId");
            return (Criteria) this;
        }

        public Criteria andPresentTypeIsNull() {
            addCriterion("present_type is null");
            return (Criteria) this;
        }

        public Criteria andPresentTypeIsNotNull() {
            addCriterion("present_type is not null");
            return (Criteria) this;
        }

        public Criteria andPresentTypeEqualTo(Integer value) {
            addCriterion("present_type =", value, "presentType");
            return (Criteria) this;
        }

        public Criteria andPresentTypeNotEqualTo(Integer value) {
            addCriterion("present_type <>", value, "presentType");
            return (Criteria) this;
        }

        public Criteria andPresentTypeGreaterThan(Integer value) {
            addCriterion("present_type >", value, "presentType");
            return (Criteria) this;
        }

        public Criteria andPresentTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("present_type >=", value, "presentType");
            return (Criteria) this;
        }

        public Criteria andPresentTypeLessThan(Integer value) {
            addCriterion("present_type <", value, "presentType");
            return (Criteria) this;
        }

        public Criteria andPresentTypeLessThanOrEqualTo(Integer value) {
            addCriterion("present_type <=", value, "presentType");
            return (Criteria) this;
        }

        public Criteria andPresentTypeIn(List<Integer> values) {
            addCriterion("present_type in", values, "presentType");
            return (Criteria) this;
        }

        public Criteria andPresentTypeNotIn(List<Integer> values) {
            addCriterion("present_type not in", values, "presentType");
            return (Criteria) this;
        }

        public Criteria andPresentTypeBetween(Integer value1, Integer value2) {
            addCriterion("present_type between", value1, value2, "presentType");
            return (Criteria) this;
        }

        public Criteria andPresentTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("present_type not between", value1, value2, "presentType");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated do_not_delete_during_merge Tue Apr 16 14:59:31 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table indoor_middle_tab
     *
     * @mbggenerated Tue Apr 16 14:59:31 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}