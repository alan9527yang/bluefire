package com.bluefireplatform.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class OutdoorTrajectoryExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    public OutdoorTrajectoryExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andOutPointIdIsNull() {
            addCriterion("out_point_id is null");
            return (Criteria) this;
        }

        public Criteria andOutPointIdIsNotNull() {
            addCriterion("out_point_id is not null");
            return (Criteria) this;
        }

        public Criteria andOutPointIdEqualTo(Integer value) {
            addCriterion("out_point_id =", value, "outPointId");
            return (Criteria) this;
        }

        public Criteria andOutPointIdNotEqualTo(Integer value) {
            addCriterion("out_point_id <>", value, "outPointId");
            return (Criteria) this;
        }

        public Criteria andOutPointIdGreaterThan(Integer value) {
            addCriterion("out_point_id >", value, "outPointId");
            return (Criteria) this;
        }

        public Criteria andOutPointIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("out_point_id >=", value, "outPointId");
            return (Criteria) this;
        }

        public Criteria andOutPointIdLessThan(Integer value) {
            addCriterion("out_point_id <", value, "outPointId");
            return (Criteria) this;
        }

        public Criteria andOutPointIdLessThanOrEqualTo(Integer value) {
            addCriterion("out_point_id <=", value, "outPointId");
            return (Criteria) this;
        }

        public Criteria andOutPointIdIn(List<Integer> values) {
            addCriterion("out_point_id in", values, "outPointId");
            return (Criteria) this;
        }

        public Criteria andOutPointIdNotIn(List<Integer> values) {
            addCriterion("out_point_id not in", values, "outPointId");
            return (Criteria) this;
        }

        public Criteria andOutPointIdBetween(Integer value1, Integer value2) {
            addCriterion("out_point_id between", value1, value2, "outPointId");
            return (Criteria) this;
        }

        public Criteria andOutPointIdNotBetween(Integer value1, Integer value2) {
            addCriterion("out_point_id not between", value1, value2, "outPointId");
            return (Criteria) this;
        }

        public Criteria andOutUserIdIsNull() {
            addCriterion("out_user_id is null");
            return (Criteria) this;
        }

        public Criteria andOutUserIdIsNotNull() {
            addCriterion("out_user_id is not null");
            return (Criteria) this;
        }

        public Criteria andOutUserIdEqualTo(Integer value) {
            addCriterion("out_user_id =", value, "outUserId");
            return (Criteria) this;
        }

        public Criteria andOutUserIdNotEqualTo(Integer value) {
            addCriterion("out_user_id <>", value, "outUserId");
            return (Criteria) this;
        }

        public Criteria andOutUserIdGreaterThan(Integer value) {
            addCriterion("out_user_id >", value, "outUserId");
            return (Criteria) this;
        }

        public Criteria andOutUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("out_user_id >=", value, "outUserId");
            return (Criteria) this;
        }

        public Criteria andOutUserIdLessThan(Integer value) {
            addCriterion("out_user_id <", value, "outUserId");
            return (Criteria) this;
        }

        public Criteria andOutUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("out_user_id <=", value, "outUserId");
            return (Criteria) this;
        }

        public Criteria andOutUserIdIn(List<Integer> values) {
            addCriterion("out_user_id in", values, "outUserId");
            return (Criteria) this;
        }

        public Criteria andOutUserIdNotIn(List<Integer> values) {
            addCriterion("out_user_id not in", values, "outUserId");
            return (Criteria) this;
        }

        public Criteria andOutUserIdBetween(Integer value1, Integer value2) {
            addCriterion("out_user_id between", value1, value2, "outUserId");
            return (Criteria) this;
        }

        public Criteria andOutUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("out_user_id not between", value1, value2, "outUserId");
            return (Criteria) this;
        }

        public Criteria andOutLatitudeIsNull() {
            addCriterion("out_latitude is null");
            return (Criteria) this;
        }

        public Criteria andOutLatitudeIsNotNull() {
            addCriterion("out_latitude is not null");
            return (Criteria) this;
        }

        public Criteria andOutLatitudeEqualTo(Double value) {
            addCriterion("out_latitude =", value, "outLatitude");
            return (Criteria) this;
        }

        public Criteria andOutLatitudeNotEqualTo(Double value) {
            addCriterion("out_latitude <>", value, "outLatitude");
            return (Criteria) this;
        }

        public Criteria andOutLatitudeGreaterThan(Double value) {
            addCriterion("out_latitude >", value, "outLatitude");
            return (Criteria) this;
        }

        public Criteria andOutLatitudeGreaterThanOrEqualTo(Double value) {
            addCriterion("out_latitude >=", value, "outLatitude");
            return (Criteria) this;
        }

        public Criteria andOutLatitudeLessThan(Double value) {
            addCriterion("out_latitude <", value, "outLatitude");
            return (Criteria) this;
        }

        public Criteria andOutLatitudeLessThanOrEqualTo(Double value) {
            addCriterion("out_latitude <=", value, "outLatitude");
            return (Criteria) this;
        }

        public Criteria andOutLatitudeIn(List<Double> values) {
            addCriterion("out_latitude in", values, "outLatitude");
            return (Criteria) this;
        }

        public Criteria andOutLatitudeNotIn(List<Double> values) {
            addCriterion("out_latitude not in", values, "outLatitude");
            return (Criteria) this;
        }

        public Criteria andOutLatitudeBetween(Double value1, Double value2) {
            addCriterion("out_latitude between", value1, value2, "outLatitude");
            return (Criteria) this;
        }

        public Criteria andOutLatitudeNotBetween(Double value1, Double value2) {
            addCriterion("out_latitude not between", value1, value2, "outLatitude");
            return (Criteria) this;
        }

        public Criteria andOutLongitudeIsNull() {
            addCriterion("out_longitude is null");
            return (Criteria) this;
        }

        public Criteria andOutLongitudeIsNotNull() {
            addCriterion("out_longitude is not null");
            return (Criteria) this;
        }

        public Criteria andOutLongitudeEqualTo(Double value) {
            addCriterion("out_longitude =", value, "outLongitude");
            return (Criteria) this;
        }

        public Criteria andOutLongitudeNotEqualTo(Double value) {
            addCriterion("out_longitude <>", value, "outLongitude");
            return (Criteria) this;
        }

        public Criteria andOutLongitudeGreaterThan(Double value) {
            addCriterion("out_longitude >", value, "outLongitude");
            return (Criteria) this;
        }

        public Criteria andOutLongitudeGreaterThanOrEqualTo(Double value) {
            addCriterion("out_longitude >=", value, "outLongitude");
            return (Criteria) this;
        }

        public Criteria andOutLongitudeLessThan(Double value) {
            addCriterion("out_longitude <", value, "outLongitude");
            return (Criteria) this;
        }

        public Criteria andOutLongitudeLessThanOrEqualTo(Double value) {
            addCriterion("out_longitude <=", value, "outLongitude");
            return (Criteria) this;
        }

        public Criteria andOutLongitudeIn(List<Double> values) {
            addCriterion("out_longitude in", values, "outLongitude");
            return (Criteria) this;
        }

        public Criteria andOutLongitudeNotIn(List<Double> values) {
            addCriterion("out_longitude not in", values, "outLongitude");
            return (Criteria) this;
        }

        public Criteria andOutLongitudeBetween(Double value1, Double value2) {
            addCriterion("out_longitude between", value1, value2, "outLongitude");
            return (Criteria) this;
        }

        public Criteria andOutLongitudeNotBetween(Double value1, Double value2) {
            addCriterion("out_longitude not between", value1, value2, "outLongitude");
            return (Criteria) this;
        }

        public Criteria andOutSetIsNull() {
            addCriterion("out_set is null");
            return (Criteria) this;
        }

        public Criteria andOutSetIsNotNull() {
            addCriterion("out_set is not null");
            return (Criteria) this;
        }

        public Criteria andOutSetEqualTo(String value) {
            addCriterion("out_set =", value, "outSet");
            return (Criteria) this;
        }

        public Criteria andOutSetNotEqualTo(String value) {
            addCriterion("out_set <>", value, "outSet");
            return (Criteria) this;
        }

        public Criteria andOutSetGreaterThan(String value) {
            addCriterion("out_set >", value, "outSet");
            return (Criteria) this;
        }

        public Criteria andOutSetGreaterThanOrEqualTo(String value) {
            addCriterion("out_set >=", value, "outSet");
            return (Criteria) this;
        }

        public Criteria andOutSetLessThan(String value) {
            addCriterion("out_set <", value, "outSet");
            return (Criteria) this;
        }

        public Criteria andOutSetLessThanOrEqualTo(String value) {
            addCriterion("out_set <=", value, "outSet");
            return (Criteria) this;
        }

        public Criteria andOutSetLike(String value) {
            addCriterion("out_set like", value, "outSet");
            return (Criteria) this;
        }

        public Criteria andOutSetNotLike(String value) {
            addCriterion("out_set not like", value, "outSet");
            return (Criteria) this;
        }

        public Criteria andOutSetIn(List<String> values) {
            addCriterion("out_set in", values, "outSet");
            return (Criteria) this;
        }

        public Criteria andOutSetNotIn(List<String> values) {
            addCriterion("out_set not in", values, "outSet");
            return (Criteria) this;
        }

        public Criteria andOutSetBetween(String value1, String value2) {
            addCriterion("out_set between", value1, value2, "outSet");
            return (Criteria) this;
        }

        public Criteria andOutSetNotBetween(String value1, String value2) {
            addCriterion("out_set not between", value1, value2, "outSet");
            return (Criteria) this;
        }

        public Criteria andOutAltitudeInFeetIsNull() {
            addCriterion("out_altitude_in_feet is null");
            return (Criteria) this;
        }

        public Criteria andOutAltitudeInFeetIsNotNull() {
            addCriterion("out_altitude_in_feet is not null");
            return (Criteria) this;
        }

        public Criteria andOutAltitudeInFeetEqualTo(Integer value) {
            addCriterion("out_altitude_in_feet =", value, "outAltitudeInFeet");
            return (Criteria) this;
        }

        public Criteria andOutAltitudeInFeetNotEqualTo(Integer value) {
            addCriterion("out_altitude_in_feet <>", value, "outAltitudeInFeet");
            return (Criteria) this;
        }

        public Criteria andOutAltitudeInFeetGreaterThan(Integer value) {
            addCriterion("out_altitude_in_feet >", value, "outAltitudeInFeet");
            return (Criteria) this;
        }

        public Criteria andOutAltitudeInFeetGreaterThanOrEqualTo(Integer value) {
            addCriterion("out_altitude_in_feet >=", value, "outAltitudeInFeet");
            return (Criteria) this;
        }

        public Criteria andOutAltitudeInFeetLessThan(Integer value) {
            addCriterion("out_altitude_in_feet <", value, "outAltitudeInFeet");
            return (Criteria) this;
        }

        public Criteria andOutAltitudeInFeetLessThanOrEqualTo(Integer value) {
            addCriterion("out_altitude_in_feet <=", value, "outAltitudeInFeet");
            return (Criteria) this;
        }

        public Criteria andOutAltitudeInFeetIn(List<Integer> values) {
            addCriterion("out_altitude_in_feet in", values, "outAltitudeInFeet");
            return (Criteria) this;
        }

        public Criteria andOutAltitudeInFeetNotIn(List<Integer> values) {
            addCriterion("out_altitude_in_feet not in", values, "outAltitudeInFeet");
            return (Criteria) this;
        }

        public Criteria andOutAltitudeInFeetBetween(Integer value1, Integer value2) {
            addCriterion("out_altitude_in_feet between", value1, value2, "outAltitudeInFeet");
            return (Criteria) this;
        }

        public Criteria andOutAltitudeInFeetNotBetween(Integer value1, Integer value2) {
            addCriterion("out_altitude_in_feet not between", value1, value2, "outAltitudeInFeet");
            return (Criteria) this;
        }

        public Criteria andOutDaysIsNull() {
            addCriterion("out_days is null");
            return (Criteria) this;
        }

        public Criteria andOutDaysIsNotNull() {
            addCriterion("out_days is not null");
            return (Criteria) this;
        }

        public Criteria andOutDaysEqualTo(Double value) {
            addCriterion("out_days =", value, "outDays");
            return (Criteria) this;
        }

        public Criteria andOutDaysNotEqualTo(Double value) {
            addCriterion("out_days <>", value, "outDays");
            return (Criteria) this;
        }

        public Criteria andOutDaysGreaterThan(Double value) {
            addCriterion("out_days >", value, "outDays");
            return (Criteria) this;
        }

        public Criteria andOutDaysGreaterThanOrEqualTo(Double value) {
            addCriterion("out_days >=", value, "outDays");
            return (Criteria) this;
        }

        public Criteria andOutDaysLessThan(Double value) {
            addCriterion("out_days <", value, "outDays");
            return (Criteria) this;
        }

        public Criteria andOutDaysLessThanOrEqualTo(Double value) {
            addCriterion("out_days <=", value, "outDays");
            return (Criteria) this;
        }

        public Criteria andOutDaysIn(List<Double> values) {
            addCriterion("out_days in", values, "outDays");
            return (Criteria) this;
        }

        public Criteria andOutDaysNotIn(List<Double> values) {
            addCriterion("out_days not in", values, "outDays");
            return (Criteria) this;
        }

        public Criteria andOutDaysBetween(Double value1, Double value2) {
            addCriterion("out_days between", value1, value2, "outDays");
            return (Criteria) this;
        }

        public Criteria andOutDaysNotBetween(Double value1, Double value2) {
            addCriterion("out_days not between", value1, value2, "outDays");
            return (Criteria) this;
        }

        public Criteria andOutDateIsNull() {
            addCriterion("out_date is null");
            return (Criteria) this;
        }

        public Criteria andOutDateIsNotNull() {
            addCriterion("out_date is not null");
            return (Criteria) this;
        }

        public Criteria andOutDateEqualTo(Date value) {
            addCriterionForJDBCDate("out_date =", value, "outDate");
            return (Criteria) this;
        }

        public Criteria andOutDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("out_date <>", value, "outDate");
            return (Criteria) this;
        }

        public Criteria andOutDateGreaterThan(Date value) {
            addCriterionForJDBCDate("out_date >", value, "outDate");
            return (Criteria) this;
        }

        public Criteria andOutDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("out_date >=", value, "outDate");
            return (Criteria) this;
        }

        public Criteria andOutDateLessThan(Date value) {
            addCriterionForJDBCDate("out_date <", value, "outDate");
            return (Criteria) this;
        }

        public Criteria andOutDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("out_date <=", value, "outDate");
            return (Criteria) this;
        }

        public Criteria andOutDateIn(List<Date> values) {
            addCriterionForJDBCDate("out_date in", values, "outDate");
            return (Criteria) this;
        }

        public Criteria andOutDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("out_date not in", values, "outDate");
            return (Criteria) this;
        }

        public Criteria andOutDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("out_date between", value1, value2, "outDate");
            return (Criteria) this;
        }

        public Criteria andOutDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("out_date not between", value1, value2, "outDate");
            return (Criteria) this;
        }

        public Criteria andOutTimeIsNull() {
            addCriterion("out_time is null");
            return (Criteria) this;
        }

        public Criteria andOutTimeIsNotNull() {
            addCriterion("out_time is not null");
            return (Criteria) this;
        }

        public Criteria andOutTimeEqualTo(Date value) {
            addCriterionForJDBCTime("out_time =", value, "outTime");
            return (Criteria) this;
        }

        public Criteria andOutTimeNotEqualTo(Date value) {
            addCriterionForJDBCTime("out_time <>", value, "outTime");
            return (Criteria) this;
        }

        public Criteria andOutTimeGreaterThan(Date value) {
            addCriterionForJDBCTime("out_time >", value, "outTime");
            return (Criteria) this;
        }

        public Criteria andOutTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("out_time >=", value, "outTime");
            return (Criteria) this;
        }

        public Criteria andOutTimeLessThan(Date value) {
            addCriterionForJDBCTime("out_time <", value, "outTime");
            return (Criteria) this;
        }

        public Criteria andOutTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("out_time <=", value, "outTime");
            return (Criteria) this;
        }

        public Criteria andOutTimeIn(List<Date> values) {
            addCriterionForJDBCTime("out_time in", values, "outTime");
            return (Criteria) this;
        }

        public Criteria andOutTimeNotIn(List<Date> values) {
            addCriterionForJDBCTime("out_time not in", values, "outTime");
            return (Criteria) this;
        }

        public Criteria andOutTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("out_time between", value1, value2, "outTime");
            return (Criteria) this;
        }

        public Criteria andOutTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("out_time not between", value1, value2, "outTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated do_not_delete_during_merge Wed Apr 10 10:47:33 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table outdoor_trajectory
     *
     * @mbggenerated Wed Apr 10 10:47:33 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}